//% weight=70 icon="\uf185" color=#EC7505 block="カタカナ"
namespace katakana {
  const hs = [
    [" ", "!", '"', "#", "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/"],
    ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ":", ";", "<", "=", ">", "?"],
    ["@", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O"],
    ["P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "[", "\\", "]", "^", "_"],
    ["`", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o"],
    ["p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "{", "|", "}", "~", ""],
    ["¥", "｡", "｢", "｣", "､", "･", "ｦ", "ｧ", "ｨ", "ｩ", "ｪ", "ｫ", "ｬ", "ｭ", "ｮ", "ｯ"],
    ["ｰ", "ｱ", "ｲ", "ｳ", "ｴ", "ｵ", "ｶ", "ｷ", "ｸ", "ｹ", "ｺ", "ｻ", "ｼ", "ｽ", "ｾ", "ｿ"],
    ["ﾀ", "ﾁ", "ﾂ", "ﾃ", "ﾄ", "ﾅ", "ﾆ", "ﾇ", "ﾈ", "ﾉ", "ﾊ", "ﾋ", "ﾌ", "ﾍ", "ﾎ", "ﾏ"],
    ["ﾐ", "ﾑ", "ﾒ", "ﾓ", "ﾔ", "ﾕ", "ﾖ", "ﾗ", "ﾘ", "ﾙ", "ﾚ", "ﾛ", "ﾜ", "ﾝ", "ﾞ", "ﾟ"]
  ]
  const em = [
    ["　", "！", "”", "＃", "＄", "％", "＆", "’", "（", "）", "＊", "＋", "，", "－", "．", "／"],
    ["０", "１", "２", "３", "４", "５", "６", "７", "８", "９", "：", "；", "＜", "＝", "＞", "？"],
    ["＠", "Ａ", "Ｂ", "Ｃ", "Ｄ", "Ｅ", "Ｆ", "Ｇ", "Ｈ", "Ｉ", "Ｊ", "Ｋ", "Ｌ", "Ｍ", "Ｎ", "Ｏ"],
    ["Ｐ", "Ｑ", "Ｒ", "Ｓ", "Ｔ", "Ｕ", "Ｖ", "Ｗ", "Ｘ", "Ｙ", "Ｚ", "［", "＼", "］", "＾", "＿"],
    ["｀", "ａ", "ｂ", "ｃ", "ｄ", "ｅ", "ｆ", "ｇ", "ｈ", "ｉ", "ｊ", "ｋ", "ｌ", "ｍ", "ｎ", "ｏ"],
    ["ｐ", "ｑ", "ｒ", "ｓ", "ｔ", "ｕ", "ｖ", "ｗ", "ｘ", "ｙ", "ｚ", "｛", "｜", "｝", "〜", ""],
    ["￥", "。", "「", "」", "、", "・", "ヲ", "ァ", "ィ", "ゥ", "ェ", "ォ", "ャ", "ュ", "ョ", "ッ"],
    ["ー", "ア", "イ", "ウ", "エ", "オ", "カ", "キ", "ク", "ケ", "コ", "サ", "シ", "ス", "セ", "ソ"],
    ["タ", "チ", "ツ", "テ", "ト", "ナ", "ニ", "ヌ", "ネ", "ノ", "ハ", "ヒ", "フ", "ヘ", "ホ", "マ"],
    ["ミ", "ム", "メ", "モ", "ヤ", "ユ", "ヨ", "ラ", "リ", "ル", "レ", "ロ", "ワ", "ン", "゛", "°"]
  ]
  const na = [
    [0,0,0,0,0],
    [1,0,0,0,0],
    [0,1,0,0,0],
    [1,1,0,0,0],
    [0,0,1,0,0],
    [1,0,1,0,0],
    [0,1,1,0,0],
    [1,1,1,0,0],
    [0,0,0,1,0],
    [1,0,0,1,0],
    [0,1,0,1,0],
    [1,1,0,1,0],
    [0,0,1,1,0],
    [1,0,1,1,0],
    [0,1,1,1,0],
    [1,1,1,1,0],
    [0,0,0,0,1],
    [1,0,0,0,1],
    [0,1,0,0,1],
    [1,1,0,0,1],
    [0,0,1,0,1],
    [1,0,1,0,1],
    [0,1,1,0,1],
    [1,1,1,0,1],
    [0,0,0,1,1],
    [1,0,0,1,1],
    [0,1,0,1,1],
    [1,1,0,1,1],
    [0,0,1,1,1],
    [1,0,1,1,1],
    [0,1,1,1,1],
    [1,1,1,1,1]
  ]
  const arr = [
    [
      [na[0],na[0],na[0],na[0],na[0]],
      [na[0],na[0],na[23],na[0],na[0]],
      [na[0],na[7],na[0],na[7],na[0]],
      [na[10],na[31],na[10],na[31],na[10]],
      [na[14],na[23],na[21],na[29],na[10]],
      [na[19],na[9],na[4],na[18],na[25]],
      [na[10],na[21],na[21],na[10],na[16]],
      [na[0],na[0],na[3],na[0],na[0]],
      [na[0],na[0],na[0],na[14],na[17]],
      [na[17],na[14],na[0],na[0],na[0]],
      [na[0],na[5],na[2],na[5],na[0]],
      [na[4],na[4],na[31],na[4],na[4]],
      [na[0],na[24],na[0],na[0],na[0]],
      [na[0],na[4],na[4],na[4],na[0]],
      [na[0],na[0],na[16],na[0],na[0]],
      [na[16],na[8],na[4],na[2],na[1]],
    ],
    [
      [na[14],na[17],na[17],na[14],na[0]],
      [na[0],na[18],na[31],na[16],na[0]],
      [na[25],na[21],na[21],na[18],na[0]],
      [na[9],na[17],na[21],na[11],na[0]],
      [na[12],na[10],na[9],na[31],na[8]],
      [na[23],na[21],na[21],na[21],na[9]],
      [na[8],na[20],na[22],na[21],na[8]],
      [na[17],na[9],na[5],na[3],na[1]],
      [na[10],na[21],na[21],na[21],na[10]],
      [na[2],na[21],na[13],na[5],na[2]],
      [na[0],na[0],na[10],na[0],na[0]],
      [na[0],na[16],na[10],na[0],na[0]],
      [na[0],na[4],na[10],na[17],na[0]],
      [na[0],na[10],na[10],na[10],na[0]],
      [na[0],na[17],na[10],na[4],na[0]],
      [na[2],na[1],na[21],na[5],na[2]]
    ],
    [
      [na[14],na[21],na[27],na[31],na[14]],
      [na[30],na[5],na[5],na[30],na[0]],
      [na[31],na[21],na[21],na[10],na[0]],
      [na[14],na[17],na[17],na[17],na[0]],
      [na[31],na[17],na[17],na[14],na[0]],
      [na[31],na[21],na[21],na[17],na[0]],
      [na[31],na[5],na[5],na[1],na[0]],
      [na[14],na[17],na[17],na[21],na[12]],
      [na[31],na[4],na[4],na[31],na[0]],
      [na[17],na[31],na[17],na[0],na[0]],
      [na[9],na[17],na[17],na[15],na[1]],
      [na[31],na[4],na[10],na[17],na[0]],
      [na[31],na[16],na[16],na[16],na[0]],
      [na[31],na[2],na[4],na[2],na[31]],
      [na[31],na[2],na[4],na[8],na[31]],
      [na[14],na[17],na[17],na[14],na[0]]
    ],
    [
      [na[31],na[5],na[5],na[2],na[0]],
      [na[6],na[9],na[25],na[22],na[0]],
      [na[31],na[5],na[5],na[10],na[16]],
      [na[18],na[21],na[21],na[9],na[0]],
      [na[1],na[1],na[31],na[1],na[1]],
      [na[15],na[16],na[16],na[15],na[0]],
      [na[7],na[8],na[16],na[8],na[7]],
      [na[31],na[8],na[4],na[8],na[31]],
      [na[27],na[4],na[4],na[27],na[0]],
      [na[1],na[2],na[28],na[2],na[1]],
      [na[25],na[21],na[19],na[17],na[0]],
      [na[0],na[0],na[0],na[31],na[17]],
      [na[1],na[2],na[4],na[8],na[16]],
      [na[17],na[31],na[0],na[0],na[0]],
      [na[0],na[2],na[1],na[2],na[0]],
      [na[0],na[16],na[16],na[16],na[0]]
    ],
    [
      [na[0],na[1],na[2],na[0],na[0]],
      [na[12],na[18],na[18],na[30],na[16]],
      [na[31],na[20],na[20],na[8],na[0]],
      [na[12],na[18],na[18],na[18],na[0]],
      [na[8],na[20],na[20],na[31],na[0]],
      [na[14],na[21],na[21],na[18],na[0]],
      [na[4],na[30],na[5],na[1],na[0]],
      [na[2],na[21],na[21],na[15],na[0]],
      [na[31],na[4],na[4],na[24],na[0]],
      [na[0],na[29],na[0],na[0],na[0]],
      [na[0],na[16],na[16],na[13],na[0]],
      [na[31],na[4],na[10],na[16],na[0]],
      [na[0],na[15],na[16],na[16],na[0]],
      [na[30],na[2],na[28],na[2],na[28]],
      [na[30],na[2],na[28],na[2],na[28]],
      [na[12],na[18],na[18],na[12],na[0]]
    ],
    [
      [na[30],na[10],na[10],na[4],na[0]],
      [na[4],na[10],na[10],na[30],na[0]],
      [na[28],na[2],na[2],na[2],na[0]],
      [na[16],na[20],na[10],na[2],na[0]],
      [na[0],na[15],na[20],na[20],na[16]],
      [na[14],na[16],na[16],na[30],na[16]],
      [na[6],na[8],na[16],na[8],na[6]],
      [na[30],na[16],na[8],na[16],na[30]],
      [na[18],na[12],na[12],na[18],na[0]],
      [na[18],na[20],na[8],na[4],na[2]],
      [na[18],na[26],na[22],na[18],na[0]],
      [na[0],na[0],na[4],na[31],na[17]],
      [na[0],na[0],na[31],na[0],na[0]],
      [na[17],na[31],na[4],na[0],na[0]],
      [na[4],na[2],na[4],na[8],na[4]],
      []
    ],
    [
      [na[0],na[13],na[30],na[13],na[0]],
      [na[8],na[20],na[8],na[0],na[0]],
      [na[0],na[0],na[15],na[1],na[1]],
      [na[16],na[16],na[30],na[0],na[0]],
      [na[8],na[16],na[0],na[0],na[0]],
      [na[0],na[0],na[4],na[0],na[0]],
      [na[21],na[21],na[21],na[21],na[15]],  //ヲ
      [na[2],na[30],na[10],na[6],na[0]],
      [na[16],na[8],na[28],na[2],na[0]],
      [na[0],na[4],na[22],na[12],na[0]],
      [na[0],na[20],na[28],na[20],na[0]],
      [na[20],na[12],na[30],na[4],na[0]],
      [na[4],na[30],na[4],na[12],na[0]],
      [na[20],na[20],na[28],na[16],na[0]],
      [na[0],na[21],na[21],na[31],na[0]],
      [na[4],na[20],na[8],na[4],na[0]]
    ],
    [
      [na[4],na[4],na[4],na[4],na[4]],
      [na[1],na[17],na[13],na[5],na[3]],  //ア
      [na[4],na[4],na[28],na[2],na[1]],
      [na[6],na[18],na[19],na[18],na[14]],
      [na[17],na[17],na[31],na[17],na[17]],
      [na[18],na[10],na[6],na[31],na[2]],
      [na[18],na[10],na[7],na[18],na[14]],  //カ
      [na[10],na[10],na[31],na[10],na[10]],
      [na[2],na[17],na[17],na[9],na[7]],
      [na[4],na[19],na[18],na[14],na[2]],
      [na[17],na[17],na[17],na[17],na[31]],
      [na[2],na[23],na[18],na[15],na[2]],  //サ
      [na[21],na[21],na[17],na[8],na[7]],
      [na[17],na[9],na[5],na[11],na[17]],
      [na[2],na[15],na[18],na[18],na[22]],
      [na[3],na[16],na[16],na[16],na[15]],
    ],
    [
      [na[18],na[18],na[21],na[9],na[7]],  //タ
      [na[21],na[21],na[21],na[15],na[5]],
      [na[23],na[16],na[23],na[16],na[15]],
      [na[21],na[21],na[13],na[5],na[5]],
      [na[0],na[31],na[4],na[8],na[0]],
      [na[18],na[18],na[15],na[2],na[2]],  //ナ
      [na[16],na[17],na[17],na[17],na[16]],
      [na[17],na[21],na[9],na[9],na[23]],
      [na[18],na[10],na[27],na[10],na[22]],
      [na[16],na[16],na[8],na[4],na[3]],
      [na[16],na[15],na[0],na[7],na[24]],  //ハ
      [na[15],na[18],na[18],na[18],na[18]],
      [na[17],na[17],na[9],na[5],na[3]],
      [na[28],na[2],na[4],na[8],na[16]],
      [na[26],na[2],na[31],na[2],na[26]],
      [na[1],na[5],na[9],na[21],na[3]],  //マ
    ],
    [
      [na[0],na[21],na[21],na[21],na[16]],
      [na[24],na[22],na[17],na[20],na[24]],
      [na[16],na[10],na[4],na[11],na[0]],
      [na[5],na[31],na[21],na[21],na[21]],
      [na[2],na[31],na[2],na[10],na[6]],  //ヤ
      [na[17],na[17],na[17],na[31],na[16]],
      [na[21],na[21],na[21],na[21],na[31]],
      [na[21],na[21],na[21],na[21],na[13]],  //ラ
      [na[7],na[16],na[16],na[16],na[15]],
      [na[31],na[0],na[31],na[16],na[12]],
      [na[31],na[16],na[16],na[16],na[12]],
      [na[31],na[17],na[17],na[17],na[31]],
      [na[3],na[17],na[17],na[17],na[15]],  //ワ
      [na[17],na[17],na[17],na[8],na[7]],  //ン
      [na[3],na[3],na[0],na[0],na[0]],
      [na[2],na[5],na[2],na[0],na[0]]
    ]
  ]
  const marks = [
    ["ガ","カﾞ"],["ギ","キﾞ"],["グ","クﾞ"],["ゲ","ケﾞ"],["ゴ","コﾞ"],
    ["ザ","サﾞ"],["ジ","シﾞ"],["ズ","スﾞ"],["ゼ","セﾞ"],["ゾ","ソﾞ"],
    ["ダ","タﾞ"],["ヂ","チﾞ"],["ヅ","ツﾞ"],["デ","テﾞ"],["ド","トﾞ"],
    ["バ","ハﾞ"],["ビ","ヒﾞ"],["ブ","フﾞ"],["ベ","ヘﾞ"],["ボ","ホﾞ"],
    ["ヴ","ウﾞ"],
    ["パ","ハﾟ"],["ピ","ヒﾟ"],["プ","フﾟ"],["ペ","ヘﾟ"],["ポ","ホﾟ"]
  ]

  //% blockId=show_strings block="文字列を表示 %v"
  export function putStr(text: string, time: number = 500) :void{
    let strings: number[][] = []
    for (let m = 0; m < marks.length; m++) {
      for (let c = 0; c < text.length; c++) {
        if(text.substr(c, 1) == marks[m][0]){
          text = text.substr(0,c)+marks[m][1]+text.substr(c+1,text.length-c-1)
        }
      }
    }
    for (let c = 0; c < text.length; c++) {
        for (let x = 0; x < 10; x++) {
            for (let y = 0; y < 16; y++) {
                if (hs[x][y] == text.substr(c, 1) || em[x][y] == text.substr(c, 1)) {
                    for (let z = 0; z < arr[x][y].length; z++) {
                        strings.push(arr[x][y][z])
                    }
                    if((x==9 && y==14) || (x==9 && y==15)){
                      strings.splice(strings.length-6,1)
                      strings.splice(strings.length-(3-(y%2)),(3-(y%2)))
                    }
                    strings.push([0, 0, 0, 0, 0])
                }
            }
        }
    }

    for (let z = 0; z < strings.length; z++) {
        for (let x = z; x < z + 5; x++) {
            for (let y = 0; y < 5; y++) {
                if (x >= strings.length) {
                    if (strings[x - strings.length][y] == 1) {
                        led.plot(x - z, y)
                    }
                } else {
                    if (strings[x][y] == 1) {
                        led.plot(x - z, y)
                    }
                }
            }
        }
        basic.pause(time)
        for (let x = z; x < z + 5; x++) {
            for (let y = 0; y < 5; y++) {
                if (x >= strings.length) {
                    if (strings[x - strings.length][y] == 1) {
                        led.unplot(x - z, y)
                    }
                } else {
                    if (strings[x][y] == 1) {
                        led.unplot(x - z, y)
                    }
                }
            }
        }
    }
  }
}
